## Работа 4. Детектирование границ документов на кадрах видео
автор: Богомолов В.Ю.
дата: @time_stemp@
url: https://github.com/Gdeya/ImageProcessing/tree/main/prj.labs/lab04

### Задание
0. текст, иллюстрации и подписи отчета придумываем самостоятельно
1. самостоятельно снимаем видео смартфоном
- объект съемки - купюры (рубли разного номинала), расправленные и лежащие на поверхности (проективно искаженны прямоугольник)
- количество роликов - от 5 шт.
- длительность - 5-7 сек
- условия съемки разные
2. извлекаем по 3 кадра из каждого ролика (делим кол-во кадров на 5 и берем каждый с индеком 2/5,3/5,4/5)
3. цветоредуцируем изображения
4. бинаризцем изображения
5. морфологически обрабатываем изображения
6. выделяем основную компоненту связности
7. руками изготавливаем маски (идеальная зона купюры)
8. оцениваем качество выделение зоны и анализируем ошибки

### Результаты

![](lab4_1_2_5.png)
Рис. 1. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #1 с индексом 2_5

![](lab4_1_3_5.png)
Рис. 2. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #1 с индексом 3_5

![](lab4_1_4_5.png)
Рис. 3. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #1 с индексом 4_5

![](lab4_2_2_5.png)
Рис. 4. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #2 с индексом 2_5

![](lab4_2_3_5.png)
Рис. 5. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #2 с индексом 3_5

![](lab4_2_4_5.png)
Рис. 6. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #2 с индексом 4_5

![](lab4_3_2_5.png)
Рис. 7. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #3 с индексом 2_5

![](lab4_3_3_5.png)
Рис. 8. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #3 с индексом 3_5

![](lab4_3_4_5.png)
Рис. 9. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #3 с индексом 4_5

![](lab4_4_2_5.png)
Рис. 10. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #4 с индексом 2_5

![](lab4_4_3_5.png)
Рис. 11. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #4 с индексом 3_5

![](lab4_4_4_5.png)
Рис. 12. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #4 с индексом 4_5

![](lab4_5_2_5.png)
Рис. 13. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #5 с индексом 2_5

![](lab4_5_3_5.png)
Рис. 14. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #5 с индексом 3_5

![](lab4_5_4_5.png)
Рис. 15. Склейка из исходного кадра с правильным выделением, и обработанного кадра с алгоритмическим выделением из видео #5 с индексом 4_5

На кадрах со схожим по яркости фоном, алгоритму трудно определить правильные границы фигуры, а на явно различном фоне алгоритм справился хорошо.

Была написана пробная функция ошибки, которая вычисляет отношение площадей выделения, отношение расстояния между центрами выделенных фигур к диагонали исходного изображения, и берет их произведение домножая на прикидочный коэфициент равный 100.

Ниже приведены результаты работы функции:
#1    1.02364
#2    0.627776
#3    0.694403
#4    13.7916
#5    20.6519
#6    39.2278
#7    78.1641
#8    74.2646
#9    77.0371
#10    0.7109
#11    0.609032
#12    0.548974
#13    2.54412
#14    0.74901
#15    0.76129

Как мы видим, на явно различимом фоне, функция ошибки показыват коэффициенты не более 2.54412 (скорее всего было бы меньше, но границы правильного выделения выставлялись вручную с небольшими огрешностями), а на схожем фоне коэффициент увеличивается во много раз.

### Текст программы

```cpp
@cpp_source@
```
